## Docker Compose
COMPOSE_BAKE=true
# COMPOSE_FILE=docker-compose.db.yml:docker-compose.llm.yml
COMPOSE_FILE=docker-compose.db.yml:docker-compose.llm.yml:docker-compose.litellm.yml
VOLUME_DOCKER=< absolute_path_to_mounted_volume >

## postgres
PGVECTOR_TAG=pg17
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_USER=postgres
POSTGRES_PASSWORD=< $ openssl rand -base64 64 | tr -d "=+/" >
POSTGRES_DB=postgres

## redis
REDIS_PASSWORD=< $ openssl rand -base64 64 | tr -d "=+/" >

## minio
MINIO_ROOT_USER=< $ openssl rand -base64 64 | tr -d "=+/" | cut -c1-20 >
MINIO_ROOT_PASSWORD=< $ openssl rand -base64 64 | tr -d "=+/" >
MINIO_BUCKET_NAME=ood

## ollama
OLLAMA_FLASH_ATTENTION=1
OLLAMA_KEEP_ALIVE=5m

## mcpo
MCPO_API_KEY=< $ openssl rand -base64 64 | tr -d "=+/" >

## searxng
SEARXNG_SECRET_KEY=< $ openssl rand -base64 64 | tr -d "=+/" >
SEARXNG_BASE_URL=https://localhost
SEARXNG_UWSGI_WORKERS=4
SEARXNG_UWSGI_THREADS=4

## open-webui
OPEN_WEBUI_TAG=main

## open-webui-env-openai
ENABLE_OPENAI_API=true
OPENAI_API_KEY=< sk-something_long_888 >
OPENAI_API_BASE_URL=https://api.openai.com/v1

## open-webui-env-ollama
OLLAMA_BASE_URL=http://ollama:11434

## open-webui-env-rag
ENABLE_RAG_HYBRID_SEARCH=true
RAG_RERANKING_MODEL=BAAI/bge-reranker-v2-m3
RAG_EMBEDDING_ENGINE=ollama
RAG_EMBEDDING_MODEL=snowflake-arctic-embed2:latest
RAG_EMBEDDING_MODEL_AUTO_UPDATE=true

## open-webui-env-searxng
ENABLE_RAG_WEB_SEARCH=true
ENABLE_SEARCH_QUERY=true
RAG_WEB_SEARCH_ENGINE=searxng
RAG_WEB_SEARCH_RESULT_COUNT=5
RAG_WEB_SEARCH_CONCURRENT_REQUESTS=10
SEARXNG_QUERY_URL=http://searxng:8080/search?format=json&q=<query>
YOUTUBE_LOADER_LANGUAGE=en,th,zh

## open-webui-env-websocket
ENABLE_WEBSOCKET_SUPPORT=true
WEBSOCKET_MANAGER=redis
WEBSOCKET_REDIS_URL=redis://default:${REDIS_PASSWORD:-}@${REDIS_NETWORKS_ALIAS:-ood-redis}:6379/1


STORAGE_PROVIDER=${STORAGE_PROVIDER:-s3}
S3_ACCESS_KEY_ID=${MINIO_ROOT_USER}
S3_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}
S3_REGION_NAME=${S3_REGION_NAME:-ap-southeast-1}
S3_BUCKET_NAME=${MINIO_BUCKET_NAME:-ood}
S3_ENDPOINT_URL=http://${MINIO_NETWORK_ALIAS:-supabase-minio}:9000

## open-webui-env-webserver
ENV=dev
WEBUI_SECRET_KEY=< $ openssl rand -base64 64 | tr -d "=+/" >
ADMIN_EMAIL=< please update your email >
JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-3600}
USE_CUDA_DOCKER=false
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
VECTOR_DB=${VECTOR_DB:-pgvector}
GLOBAL_LOG_LEVEL=DEBUG
OAUTH_MERGE_ACCOUNTS_BY_EMAIL=${OAUTH_MERGE_ACCOUNTS_BY_EMAIL:-false}
GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-REPLACEME_GOOGLE_CLIENT_ID}
GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:-REPLACEME_GOOGLE_CLIENT_SECRET}
ENABLE_OAUTH_SIGNUP=${ENABLE_OAUTH_SIGNUP:-true}

## open-webui-env-google-drive
ENABLE_GOOGLE_DRIVE_INTEGRATION=false
GOOGLE_DRIVE_CLIENT_ID=${GOOGLE_CLIENT_ID}
GOOGLE_DRIVE_API_KEY=< KEY >
GOOGLE_REDIRECT_URI=< Open WebUI FQDN >/oauth/google/callback

## open-webui-env-image-generation
ENABLE_IMAGE_GENERATION=false
IMAGE_GENERATION_ENGINE=openai
IMAGE_GENERATION_MODEL=dall-e-3
IMAGE_SIZE=1024x1024

## litellm-postgres
LITELLM_PGVECTOR_TAG=pg17
LITELLM_POSTGRES_HOST=litellm_postgres
LITELLM_POSTGRES_PORT=5432
LITELLM_POSTGRES_USER=postgres
LITELLM_POSTGRES_PASSWORD=<  $ openssl rand -base64 64 | tr -d "=+/" >
LITELLM_POSTGRES_DB=postgres

## litellm-redis
LITELLM_REDIS_PASSWORD=<  $ openssl rand -base64 64 | tr -d "=+/" >

## litellm
LITELLM_TAG=main-latest
LITELLM_DATABASE_URL=postgresql://${LITELLM_POSTGRES_USER}:${LITELLM_POSTGRES_PASSWORD}@${LITELLM_POSTGRES_HOST}:${LITELLM_POSTGRES_PORT}/${LITELLM_POSTGRES_DB}
LITELLM_MODE=PRODUCTION
LITELLM_LOG=ERROR
LITELLM_SALT_KEY=sk-litellm-salt-<openssl rand -base64 64 | tr -d "=+/">
LITELLM_MASTER_KEY=sk-litellm-master-<openssl rand -base64 64 | tr -d "=+/">
# LITELLM_REDIS_HOST=litellm_redis
# LITELLM_REDIS_PORT=6379
# LITELLM_REDIS_PASSWORD=${LITELLM_REDIS_PASSWORD}
# OLLAMA_BASE_URL=${OLLAMA_BASE_URL}
# ANTHROPIC_API_KEY=
# DEEPSEEK_API_KEY=
# OPENAI_API_KEY=
OPENROUTER_API_KEY=< sk-or-some_random_and_long_strings >
# VERTEX_PROJECT=
# VERTEX_LOCATION=
# VERTEX_CREDENTIALS=
